-What is authentication?

-lab 1
intruder đến chết, k có premium thì tự ngồi do tay, nhận thấy sự khác biệt trong rep ở account "activestat" (khi tìm kiếm cụm từ Invalid... có dấu '.') (nó k có)
dùng intruder dò mật khẩu từ account đã  có => taylor (vì có http 302 forhibiden) sự khác biệt.

-
Flawed brute-force protection
lab brute force giới hạn số lượt đăng nhập
=> pirck attack 
bước 1: check số lần giới hạn
lập danh sách pass (chèn peter theo số lần giới hạn)
lập danh sách user (chèn wiener)

=> carlos 123qwe (302 res)


-Account locking
Tìm user name bằng cách thử xem res nào phản hồi về số lần thử mật khẩu của user đó quá nhiều => cos username => sniper nữa là xong  (Chia nhỏ gói ra mới chạy clust bomber được, burp free như cac à)


-User rate limiting

-HTTP basic authentication

-Flawed two-factor verification logic

def queueRequests(target, wordlists):
    engine = RequestEngine(
        endpoint=target.endpoint,
        concurrentConnections=5,
        requestsPerConnection=100,
        pipeline=True
    )

    # brute từ 0000 đến 9999
    for i in range(10000):
        code = str(i).zfill(4)   # pad thành 4 số
        engine.queue(target.req, code)


def handleResponse(req, interesting):
    # hiện tất cả request/response ra bảng Turbo Intruder
    table.add(req)


dungf turbo intruder, đúng vip sì líp :DDDDDDDD


-Keeping users logged in
lab
bước 1: quan sát cookie stayloggi => để ý bên base64 url decode => wiener:MD5, lên check với pass là peter => md5 tượng tự cái đó => staylogg = user:md5(pass)
=> chuyển yêu cầu url từ wiener=> carlos, sau đó lấy pass từ portswigger, convert sang md5 kiểu  carlos:md5(pass) bằng py
=> convert một lần nữa cụm (carlos:md5(pass)) => base 64 bằng py, gắn nó vào payload của stayloggg r brute force là ra

